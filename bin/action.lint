#!/bin/bash

############################################################
# Source environment files
############################################################
path=$PWD
file="env.source"

# Starting from the root to present working directory,
# traverse directories and source the env files (/, /aa, /aa/bb, ...)

# bottom-up traversal
while true; do
    array+=("$path")
    if [[ $path =~ ^(/|[^/]+)$ ]]; then
        break
    elif [[ $path =~ ^/[^/]+$ ]]; then
        path="/"
    else
        path="${path%/*}"
    fi
done
# top-down traversal
for (( i=${#array[@]}-1; i>=0; i-- )); do
    p="${array[$i]}"
    if [[ -f "$p/$file" ]]; then
        source $p/$file
    fi
done

############################################################
# Command line argument processing
############################################################
TEMP=$(getopt --options f:t: --longoptions filelist:,top: -- "$@")
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

eval set -- "$TEMP"

while true; do
  case "$1" in
    -f | --filelist ) echo "AA"; export DESIGN_FILELIST="$2"; shift 2 ;;
    -t | --top ) echo "BB"; export DESIGN_TOP="$2"; shift 2 ;;
    -- ) shift; break ;;
    * ) echo "Unsupported option $1" >&2; exit 1 ;;
  esac
done

############################################################
# Check mandatory variables
############################################################
if [ -z $SPYGLASS_HOME ];
then
    echo "Environment variable SPYGLASS_HOME is not set";
    exit 1;
fi

if [ -z $DESIGN_FILELIST ];
then
    echo "Environment variable DESIGN_FILELIST is not set";
    exit 1;
fi

if [ -z $DESIGN_TOP ];
then
    echo "Environment variable DESIGN_TOP is not set";
    exit 1;
fi

############################################################
# Create working directory
############################################################
\rm -rf work.lint
mkdir work.lint
cd work.lint

############################################################
# Main
############################################################
echo "Executing Lint using "
echo "  - filelist=$DESIGN_FILELIST"
echo "  - top=$DESIGN_TOP"

cat << EOF > rtl_signoff.tcl

# Create a new project
new_project LINT_RTL_HANDOFF.${DESIGN_TOP}
    
# Rules for RTL handoff
current_methodology ${SPYGLASS_HOME}/GuideWare/latest/block/rtl_handoff
    
#Read Files
read_file -type sourcelist ${DESIGN_FILELIST}
    
#Read waiver files
waive -rule { {NoAssignX-ML} } -comment {Initialization to 'x' can be helpful for debugging.}
#read_file -type awl ../waiver.awl
    
set_option enableSV09 yes
set_option language_mode mixed
set_option allow_module_override yes
set_option designread_disable_flatten no
set_option ignoredu axi_xbar_intf
set_option top ${DESIGN_TOP}
    
# Disable HWPE Mac Engine Usage
#set_option param {pulpissimo.USE_HWPE=0}
    
# Link Design
compile_design
    
# Set lint_rtl goal and run
current_goal lint/lint_rtl
run_goal
    
# Create reports
exec mkdir -p reports
write_report -reportdir reports project_summary
write_report -reportdir reports moresimple > reports/moresimple.rpt

save_project

EOF

sg_shell < rtl_signoff.tcl
